#!/bin/bash

# This script installs LLVM 11.1.0 with the clang/clang++ compiler
# assuming that Python3 and Cmake3 are already installed
# The build works on Coeus, but currently fails on Gaia

# Note that if NGSolve is compiled using clang, all related code, 
# e.g. ngs-special-functions, fiberamp, ngstents, etc... should
# also be compiled using clang.  If not, you will likely see compile
# errors like "unrecognized command line option '-faligned-allocation';
#   did you mean -fsized-deallocation'?"
# These errors occur if project uses the cmake function
# "add_ngsolve_python_module" which is provided by NGSolve.

module load gcc-9.2.0

export BASEDIR=$HOME/local/llvm-project
export BUILDDIR=$BASEDIR/build
export INSTALLDIR=$BASEDIR/install
export SRCDIR=$BASEDIR/llvm

if [ -d $BASEDIR ]; then
    rm -rf $BASEDIR
fi

cd $HOME/local
wget https://github.com/llvm/llvm-project/archive/llvmorg-11.1.0.tar.gz 
tar xvf llvmorg-11.1.0.tar.gz
rm llvmorg-11.1.0.tar.gz
mv llvm-project-llvmorg-11.1.0 llvm-project
mkdir $BUILDDIR
mkdir $INSTALLDIR
cd $BUILDDIR

cmake $SRCDIR \
    -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLDIR \
    -DCMAKE_BUILD_TYPE:STRING=Release \
    -DLLVM_TARGETS_TO_BUILD:STRING="host" \
    -DLLVM_INCLUDE_DOCS:BOOL=OFF \
    -DLLVM_INCLUDE_TESTS:BOOL=OFF \
    -DLLVM_ENABLE_Z3_SOLVER:BOOL=OFF \
    -DLLVM_ENABLE_RTTI:BOOL=ON \
    -DLLVM_LINK_LLVM_DYLIB:BOOL=ON \
    -DLLVM_BUILD_LLVM_DYLIB:BOOL=ON \
    -DLLVM_ENABLE_RTTI:BOOL=ON \
    -DLLVM_ENABLE_PROJECTS:STRING="clang;clang-tools-extra;lld;lldb;openmp;polly;mlir" \
    -DLLVM_ENABLE_RUNTIMES:STRING="compiler-rt;libcxx;libcxxabi;libunwind" \
    -DLLDB_ENABLE_PYTHON:BOOL=OFF \
    -DLLDB_ENABLE_LUA:BOOL=OFF \
    -DLLDB_ENABLE_LZMA:BOOL=OFF \
    -DLIBOMP_INSTALL_ALIASES:BOOL=OFF

make -j20
make install

# maybe try this:
# make CXXFLAGS="-frtti -std=c++17" -j20
